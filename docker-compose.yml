master:
#  build: './sparkmaster'
  image: jupyter/pyspark-notebook
  command: bash -c "/usr/local/spark/bin/spark-class org.apache.spark.deploy.master.Master -h master"
  hostname: master
  container_name: master
  environment:
    MASTER: spark://master:7077
    SPARK_CONF_DIR: /conf
    SPARK_PUBLIC_DNS: localhost
  expose:
    - 7001
    - 7002
    - 7003
    - 7004
    - 7005
    - 7006
    - 7077
    - 6066
  ports:
    - 4040:4040
    - 6066:6066
    - 7077:7077
    - 8080:8080
    - 8888:8888
    - 10000:10000
  volumes:
    - ./conf/master:/conf
    - ./data:/home/jovyan/work

worker:
  image: jupyter/pyspark-notebook
  command: /usr/local/spark/bin/spark-class org.apache.spark.deploy.worker.Worker spark://master:7077 -d /home/jovyan/work
  hostname: worker
  container_name: worker
  environment:
    SPARK_CONF_DIR: /conf
    SPARK_WORKER_CORES: 2
    SPARK_WORKER_MEMORY: 1g
    SPARK_WORKER_PORT: 8881
    SPARK_WORKER_WEBUI_PORT: 8081
    SPARK_PUBLIC_DNS: localhost
  links:
    - master
  expose:
    - 7012
    - 7013
    - 7014
    - 7015
    - 7016
    - 8881
  ports:
    - 8081:8081
  volumes:
    - ./conf/worker:/conf
    - ./data:/home/jovyan/work

zookeeper:
  image: confluentinc/cp-zookeeper:latest
  hostname: zookeeper
  container_name: zookeeper
  environment:
    ZOOKEEPER_CLIENT_PORT: 2181
    ZOOKEEPER_TICK_TIME: 2000

kafka:
  image: confluentinc/cp-kafka:latest
  hostname: kafka
  container_name: kafka
  links:
    - zookeeper
  ports:
    - 9092:9092
  environment:
    KAFKA_BROKER_ID: 1
    KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
    KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
    KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
    KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
    KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

cassandra:
    image: bitnami/cassandra
    hostname: cassandra
    container_name: cassandra

    ports:
      - '7000:7000'
      - '7001:7001'
      - '9042:9042'
      - '9160:9160'
    environment:
      CASSANDRA_SEEDS: 'cassandra'
      CASSANDRA_PASSWORD_SEEDER: 'yes'
      CASSANDRA_PASSWORD: 'cassandra'
      listen_address: "$${INTERNAL_IP}"
      #    broadcast_address: public_ip
      rpc_address: 0.0.0.0
    volumes:
      - ./data:/data
      - ./database:/bitnami
